using System;
using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;

public class MalwareScript : MonoBehaviour
{
    private float radius;
    private float startingRadius;
    private float speed;
    private float health = 3;
    private float maxHealth;
    private bool initialised = false;

    private CircleCollider2D circleCollider;

    public void init(float speed, float radius)
    {
        circleCollider = this.GetComponent<CircleCollider2D>();
        maxHealth = health;
        startingRadius = radius;
        this.transform.localScale = new Vector2(radius * 2, radius * 2);
        circleCollider.radius = radius * Constants.COLLIDER_SIZE_MULTIPLIER; //1.35 makes it more accurate
        initialised = true;
        this.speed = speed;
        return;
    }

    // Update is called once per frame
    void Update()
    {
        if(initialised)
        this.transform.Translate(-speed * Time.deltaTime, 0, 0);
        return;
        
    }

    void Start()
    {
        Rigidbody2D rb = gameObject.AddComponent<Rigidbody2D>();
        rb.bodyType = RigidbodyType2D.Kinematic;
    }


    public void ReachedBase()
    {
        Player.instance.updateHealth(-1);
        Disappear();
        return;
    }

    void takeDamage()
    {
        health -= 2; //Player.getMouseDamage()
        if(health <= 0)
        {
            Disappear();
            Player.instance.incrementScores();
        }
        radius = Constants.MINIMUM_RELATIVE_MALWARE_SIZE*startingRadius + 
        (1 - Constants.MINIMUM_RELATIVE_MALWARE_SIZE)*(health / maxHealth)*startingRadius; //shrink to a minimum of half the original size
        
        this.transform.localScale = new Vector2(radius * 2, radius * 2);
        circleCollider.radius = radius * Constants.COLLIDER_SIZE_MULTIPLIER; //1.35 makes it more accurate

    }
    
    private void OnTriggerEnter2D(Collider2D col)
    {
        if(col.gameObject.name == "leftWall")
        ReachedBase();

        if(col.gameObject.name == "Bullet(Clone)") //i dont think this is good practice, TODO research a better way
        {
            Destroy(col.gameObject);
            takeDamage();
        }

        return;
    }

    void Disappear()
    {
        Destroy(gameObject);
        Destroy(this);
        return;
            }
}
